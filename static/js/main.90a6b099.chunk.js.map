{"version":3,"sources":["fbase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","refreshUser","userObj","history","useHistory","useState","displayName","newDisplayName","setNewDisplayName","getMyNweets","a","collection","where","uid","orderBy","get","nweets","console","log","docs","map","doc","data","useEffect","onSubmit","event","preventDefault","updateProfile","className","onChange","value","target","type","placeholder","autoFocus","style","marginTop","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","required","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","class","faTrash","faPencilAlt","NweetFactory","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","setNweets","onSnapshot","snapshot","nweetArray","key","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90a6b099.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { authService, dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n  const getMyNweets = async () => {\r\n    const nweets = await dbService\r\n      .collection(\"nweets\")\r\n      .where(\"creatorId\", \"==\", userObj.uid)\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .get();\r\n    console.log(nweets.docs.map((doc) => doc.data()));\r\n  };\r\n  useEffect(() => {\r\n    getMyNweets();\r\n  }, []);\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input onChange={onChange} type=\"text\" placeholder=\"Display name\" className=\"formInput\" autoFocus/>\r\n        <input type=\"submit\" value=\"Update Profile\" className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }} />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\nexport default AuthForm;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\n\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n    if (ok) {\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          {isOwner && (\r\n            <>\r\n              <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                <input\r\n                  value={newNweet}\r\n                  required\r\n                  autoFocus\r\n                  onChange={onChange}\r\n                  className=\"formInput\"\r\n                />\r\n                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n              </form>\r\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                Cancel\r\n              </span>\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n          {isOwner && (\r\n            <div class=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"nweets\").add(nweetObj);\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const getNweets = async () => {\r\n    const dbNweets = await dbService.collection(\"nweets\").get();\r\n    dbNweets.forEach((document) => {\r\n      const nweetObject = {\r\n        ...document.data(),\r\n        id: document.id,\r\n      };\r\n      setNweet((prev) => [nweetObject, ...prev]);\r\n    });\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\nexport default NweetFactory;\r\n","import { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n      const nweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setNweets(nweetArray);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Profile from \"routes/Profile\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div style={{\r\n            maxWidth:890,\r\n            width: \"100%\",\r\n            margin: \"0 auto\",\r\n            marginTop: 80,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}>\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport firebase from \"firebase\";\nimport 'styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}